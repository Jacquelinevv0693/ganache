- name: Setup Java JDK
  uses: actions/setup-java@v3.9.0
  with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: # optional
    # The path to the `.java-version` file. See examples of supported syntax in README file
    java-version-file: # optional
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package (defaults to the action runner's architecture)
    architecture: # optional
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
    cache: # optional
    # Workaround to pass job status to post job step. This variable is not intended for manual setting
    job-status: # optional, default is ${{ job.status }}
    # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-id: # optional
    # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-vendor: # optional# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Commits

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        node: [12.0.0, 12.x, 14.x, 16.x, 18.x]
        os: [ubuntu-20.04]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm run tsc
      - run: npm test
        env:
          FORCE_COLOR: 1
          INFURA_KEY: ${{ secrets.TEST_INFURA_KEY }}

  build-all:
    strategy:
      fail-fast: false
      matrix:
        node: [12.0.0, 12.x, 14.x, 16.x, 18.x]
        os: [windows-2019, ubuntu-18.04, ubuntu-20.04, macos-11]
        exclude:
          # Node v18 does not run on ubuntu-18.04: https://github.com/nodejs/node/issues/42351#issuecomment-1068424442
          - os: ubuntu-18.04
            node: 18.x

    runs-on: ${{ matrix.os }}

    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Add msbuild to PATH
        # we need msbuild tools for the `bigint-buffer` module
        if: startsWith(matrix.os, 'windows-')
        uses: microsoft/setup-msbuild@v1.0.2

      - name: install node tools
        # we don't need to install the windows-build-tools package, as we
        # already have almost everything we need. We only need to install
        # python 2.7. Also windows-build-tools@4 fails to install because some
        # resources it downloads no longer exist, and windows-build-tools@5
        # fails to install Python (it will wait on the python installer forever)
        if: startsWith(matrix.os, 'windows-')
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: install node-gyp
        if: startsWith(matrix.os, 'windows-')
        run: npm install --global node-gyp@7.1.2

      - name: Set node config to use python2.7
        if: startsWith(matrix.os, 'windows-')
        run: npm config set python python2.7

      - name: Set node config to set msvs_version to 2019
        if: startsWith(matrix.os, 'windows-')
        run: npm config set msvs_version 2019 --global

      - run: npm ci
      - run: npm run tsc
      - run: npm test
        env:
          FORCE_COLOR: 1
          INFURA_KEY: ${{ secrets.TEST_INFURA_KEY }}
